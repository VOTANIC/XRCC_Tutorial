"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3143],{4807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(74848),o=t(28453);const r={sidebar_position:3,sidebar_label:"Node Type"},a="Node Type",s={id:"BehaviourGuide/NodeType",title:"Node Type",description:"Vector3",source:"@site/docs/BehaviourGuide/NodeType.md",sourceDirName:"BehaviourGuide",slug:"/BehaviourGuide/NodeType",permalink:"/docs/BehaviourGuide/NodeType",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Node Type"},sidebar:"behaviourBlockGuideSidebar",previous:{title:"Light",permalink:"/docs/BehaviourGuide/BehaviourCategory/Light"},next:{title:"Appendix",permalink:"/docs/BehaviourGuide/Appendix"}},c={},l=[{value:"Vector3",id:"vector3",level:2},{value:"String",id:"string",level:2},{value:"Integer",id:"integer",level:2},{value:"Number",id:"number",level:2},{value:"Document",id:"document",level:2},{value:"Motion",id:"motion",level:2},{value:"Audio Clip",id:"audio-clip",level:2},{value:"Color",id:"color",level:2},{value:"Object",id:"object",level:2},{value:"Focus Point",id:"focus-point",level:2},{value:"Boolean",id:"boolean",level:2},{value:"Scene",id:"scene",level:2},{value:"Target",id:"target",level:2},{value:"Image",id:"image",level:2},{value:"Text",id:"text",level:2},{value:"Entity",id:"entity",level:2},{value:"Action",id:"action",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"node-type",children:"Node Type"})}),"\n",(0,i.jsx)(n.h2,{id:"vector3",children:"Vector3"}),"\n",(0,i.jsx)(n.p,{children:"A three-dimensional vector representing a point or direction in 3D space. It consists of three components: X, Y, and Z coordinates. Vector3 is commonly used for positions, directions, and scaling in 3D environments."}),"\n",(0,i.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,i.jsx)(n.p,{children:"A sequence of characters. String is used for text data, labels, and other textual information in programming."}),"\n",(0,i.jsx)(n.h2,{id:"integer",children:"Integer"}),"\n",(0,i.jsx)(n.p,{children:"A whole number without any fractional part. Integer is used for counting, indexing, and other numerical operations in programming."}),"\n",(0,i.jsx)(n.h2,{id:"number",children:"Number"}),"\n",(0,i.jsx)(n.p,{children:"A numeric value that can be either a whole number or a decimal number. Number is used for mathematical operations, calculations, and Indexing."}),"\n",(0,i.jsx)(n.h2,{id:"document",children:"Document"}),"\n",(0,i.jsx)(n.p,{children:"A document object that contains data and metadata. Document is used to store and manage data in a structured format. For example, it can represent various file types such as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:".pdf (Portable Document Format)"}),"\n",(0,i.jsx)(n.li,{children:".docx (Microsoft Word Document)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"motion",children:"Motion"}),"\n",(0,i.jsx)(n.p,{children:"A type of animation used for characters. Motion objects contain data and metadata that define how a character should move or perform specific actions. These can be applied to character models to create realistic or stylized animations."}),"\n",(0,i.jsx)(n.h2,{id:"audio-clip",children:"Audio Clip"}),"\n",(0,i.jsx)(n.p,{children:"An audio object that contains data and metadata. Audio Clip is used to store and manage data in a structured format. For example, it can represent various file types such as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:".mp3 (MPEG-1 Audio Layer III File)"}),"\n",(0,i.jsx)(n.li,{children:".wav (Waveform Audio File Format)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"color",children:"Color"}),"\n",(0,i.jsx)(n.p,{children:"A Color value specifying a color in the XRCC environment. Color is used to define and manipulate colors for various visual elements in the scene. It typically consists of red, green, blue, and sometimes alpha (transparency) components."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Red: The intensity of red in the color."}),"\n",(0,i.jsx)(n.li,{children:"Green: The intensity of green in the color."}),"\n",(0,i.jsx)(n.li,{children:"Blue: The intensity of blue in the color."}),"\n",(0,i.jsx)(n.li,{children:"Alpha: The transparency of the color."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"object",children:"Object"}),"\n",(0,i.jsx)(n.p,{children:"A reference to an entity in the XRCC environment. Objects can represent various elements in a scene, such as 3D models, UI elements, or other interactive components. They can have properties, behaviors, and can be manipulated or interacted with during runtime."}),"\n",(0,i.jsx)(n.h2,{id:"focus-point",children:"Focus Point"}),"\n",(0,i.jsx)(n.p,{children:"A specific point of interest on a Character object. Currently, focus points are only available on Character objects and can be used to target specific areas or parts of the character for various operations or behaviors."}),"\n",(0,i.jsx)(n.h2,{id:"boolean",children:"Boolean"}),"\n",(0,i.jsx)(n.p,{children:"A logical data type that can have one of two possible values: true or false. Booleans are often used in conditional statements, toggle switches, or to represent the state of certain properties."}),"\n",(0,i.jsx)(n.h2,{id:"scene",children:"Scene"}),"\n",(0,i.jsx)(n.p,{children:"The overall environment or context in which objects and behaviors exist within the XRCC platform. A scene can contain multiple objects, variables, and behaviors, and represents the entire interactive space that users can experience."}),"\n",(0,i.jsx)(n.h2,{id:"target",children:"Target"}),"\n",(0,i.jsx)(n.p,{children:"An Object, Scene, or other entity that an action or behavior is applied to or references. Targets are used to specify which element in the XRCC environment should be affected by a particular operation or behavior."}),"\n",(0,i.jsx)(n.h2,{id:"image",children:"Image"}),"\n",(0,i.jsx)(n.p,{children:"A visual representation of a 2D graphic or texture. Images can be used for various purposes in the XRCC environment, such as textures for 3D objects, UI elements, or as part of the scene background. They can be in various formats like PNG, JPEG, or other supported image file types."}),"\n",(0,i.jsx)(n.h2,{id:"text",children:"Text"}),"\n",(0,i.jsx)(n.p,{children:"A string of characters that can be used to display text in the XRCC environment. Text is used for various purposes in the XRCC environment, such as labels, buttons, or other UI elements. It can be in various formats like text, font, and color."}),"\n",(0,i.jsx)(n.h2,{id:"entity",children:"Entity"}),"\n",(0,i.jsx)(n.p,{children:"An entity object in the XRCC environment. Entity objects can be used to represent various elements in a scene, such as 3D models, UI elements, or other interactive components. They can have properties, behaviors, and can be manipulated or interacted with during runtime."}),"\n",(0,i.jsx)(n.h2,{id:"action",children:"Action"}),"\n",(0,i.jsx)(n.p,{children:"A reference to a specific behavior or operation that can be executed within the XRCC environment. Actions are predefined sets of instructions that can be triggered or called upon to perform specific tasks or behaviors. They are often used in event-driven programming within the XRCC platform to create interactive and dynamic experiences."}),"\n",(0,i.jsx)(n.p,{children:"Actions are fundamental building blocks in the XRCC behavior system, allowing developers to create interactive and responsive environments without needing to write complex code."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(96540);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);