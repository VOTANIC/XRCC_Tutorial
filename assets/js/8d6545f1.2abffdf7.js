"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3134],{50498:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>i,default:()=>a,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(74848),s=t(28453);const o={sidebar_position:2,sidebar_label:"Project 2 - Solar System"},i="XRCC Tutorial - Solar System",l={id:"Tutorial/Project2-SolarSystem",title:"XRCC Tutorial - Solar System",description:"You will build a simulated Solar System using XRCC in this tutorial.",source:"@site/docs/Tutorial/Project2-SolarSystem.md",sourceDirName:"Tutorial",slug:"/Tutorial/Project2-SolarSystem",permalink:"/XRCC_Tutorial/Tutorial/Project2-SolarSystem",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Project 2 - Solar System"},sidebar:"TutorialVideoSidebar",previous:{title:"Project 1 - Museum",permalink:"/XRCC_Tutorial/Tutorial/Project1-Museum"}},h={},c=[{value:"Techniques Covered",id:"techniques-covered",level:2},{value:"Tutorial Project",id:"tutorial-project",level:2},{value:"Configure the Scene Skybox",id:"configure-the-scene-skybox",level:2},{value:"Configure Scene&#39;s Gameplay Setting",id:"configure-scenes-gameplay-setting",level:2},{value:"Add the Sun and Saturn Models",id:"add-the-sun-and-saturn-models",level:2},{value:"Add Other Planets using Sphere Model",id:"add-other-planets-using-sphere-model",level:2},{value:"Set the Mercury to Rotate",id:"set-the-mercury-to-rotate",level:2},{value:"Set the Mercury to Orbit",id:"set-the-mercury-to-orbit",level:2},{value:"Set up Orbit and Rotation for Other Planets",id:"set-up-orbit-and-rotation-for-other-planets",level:2},{value:"Set Moon to Orbit Around Earth",id:"set-moon-to-orbit-around-earth",level:2},{value:"Add the Welcome Text",id:"add-the-welcome-text",level:2},{value:"Set up the Mercury Scene",id:"set-up-the-mercury-scene",level:2},{value:"Use Add Force to Simulate Gravity of the Planet",id:"use-add-force-to-simulate-gravity-of-the-planet",level:2},{value:"Add Welcome Text and Return Button when Clicked",id:"add-welcome-text-and-return-button-when-clicked",level:2},{value:"Add Outline Effect to Objects",id:"add-outline-effect-to-objects",level:2}];function d(e){const n={em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"xrcc-tutorial---solar-system",children:"XRCC Tutorial - Solar System"})}),"\n",(0,r.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"You will build a simulated Solar System using XRCC in this tutorial.\r\nThis tutorial builds on top of the last Museum tutorial to teach you\r\nmore advanced scene building and behaviour techniques. You will learn\r\nhow to build a multi-scene XR project with gravity by going through this\r\ntutorial. We recommend that you do this tutorial after finishing the\r\nMuseum tutorial."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(88840).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsx)(n.h2,{id:"techniques-covered",children:"Techniques Covered"}),"\n",(0,r.jsx)(n.p,{children:"You will learn the following techniques in this tutorial:"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Technique"}),(0,r.jsx)("th",{children:"Specific Techniques Covered"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Basic Scene Operation"}),(0,r.jsx)("td",{children:(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Set scene skybox"}),(0,r.jsx)("li",{children:"Toggle scene gravity setting"}),(0,r.jsx)("li",{children:"Create scene"}),(0,r.jsx)("li",{children:"Duplicate scene"})]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Advanced Scene Building"}),(0,r.jsx)("td",{children:(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Using Link tool to create parent / child relationship"}),(0,r.jsx)("li",{children:"Using Offset tool to make object rotate about an external tool"})]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Configure 3D Object"}),(0,r.jsx)("td",{children:(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Set 3D object material"}),(0,r.jsx)("li",{children:"Setting physics for 3D objects"})]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Advanced Behaviour Building"}),(0,r.jsx)("td",{children:(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Using physics behaviour"}),(0,r.jsx)("li",{children:"Using variables in behaviour"}),(0,r.jsx)("li",{children:"Change scene using behaviour block"}),(0,r.jsx)("li",{children:"Using control flow behaviour blocks"})]})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"tutorial-project",children:"Tutorial Project"}),"\n",(0,r.jsx)(n.p,{children:"The project used for this tutorial comes in two formats: a starter\r\nproject for use in this step-by-step tutorial, and a completed project\r\nfor your reference after you've completed the tutorial."}),"\n",(0,r.jsx)(n.p,{children:"Project files for the solar system tutorial can be found at:"}),"\n",(0,r.jsx)(n.p,{children:"For this tutorial, the starter project will be used to guide you build\r\nthe Solar System in a step-by-step manner. All the necessary assets\r\nrequired for the tutorial are already included in the project, so just\r\nopen the starter project in XRCC and you are ready to go with the\r\ntutorial."}),"\n",(0,r.jsx)(n.h1,{id:"set-the-scene-environment",children:"Set the Scene Environment"}),"\n",(0,r.jsx)(n.h2,{id:"configure-the-scene-skybox",children:"Configure the Scene Skybox"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['From the Toolbar, press "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'". Click the selector next to the\r\n"',(0,r.jsx)(n.strong,{children:"Skybox (Cubemap)"}),'" option to open the Selection panel and select\r\nthe "',(0,r.jsx)(n.strong,{children:"stars_milky.jpg"}),'" image in your asset library to display the\r\nimage in scene. ',(0,r.jsx)(n.em,{children:"This sets the selected image as your current\r\nscene's skybox in Cubemap format."})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(66956).A+"",width:"1919",height:"1079"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Since we are using a 360-degree image as the skybox, make sure the\r\n"Skybox 360 Image" option is selected so it\'s displayed correctly.'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configure-scenes-gameplay-setting",children:"Configure Scene's Gameplay Setting"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:['In the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'", set the Default Tool to "',(0,r.jsx)(n.strong,{children:"Auto"}),'"\r\nand Wand Length to "',(0,r.jsx)(n.strong,{children:"50"}),'", ',(0,r.jsx)(n.em,{children:"this allows you to use a longer wand\r\nto interact with the virtual environment and teleport to different\r\npositions in the scene"}),'. Then deselect the "',(0,r.jsx)(n.strong,{children:"Use Gravity"}),'" option\r\nso user can float in space during game play.']}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"create-the-solar-system",children:"Create the SOLAR SYSTEM"}),"\n",(0,r.jsx)(n.h2,{id:"add-the-sun-and-saturn-models",children:"Add the Sun and Saturn Models"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:['Open the "',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and from the "',(0,r.jsx)(n.strong,{children:"Imported Assets"}),'"\r\ntab, select the "',(0,r.jsx)(n.strong,{children:"Sun"}),'" 3D model and use the "',(0,r.jsx)(n.strong,{children:"Spawn at World\r\nOrigin"}),'" button to add the model ',(0,r.jsx)(n.strong,{children:"at (0, 0, 0) position"})," in the\r\nscene."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(48044).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:['Also from the "',(0,r.jsx)(n.strong,{children:"Imported Assets"}),'" tab, select and add the\r\n"',(0,r.jsx)(n.strong,{children:"Saturn"}),'" object to the scene as well.']}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(34377).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.strong,{children:"Move"})," ",(0,r.jsx)(n.strong,{children:"transform tool"})," to adjust the ",(0,r.jsx)(n.strong,{children:"Z-Axis\r\nposition"})," of the Saturn, so that it's at the same height but far\r\napart from the Sun, which is at the (0, 0, 0) position."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(56256).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsx)(n.h2,{id:"add-other-planets-using-sphere-model",children:"Add Other Planets using Sphere Model"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:['We will use the Sphere 3D Model to create other planets, open the\r\n"',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and from the "',(0,r.jsx)(n.strong,{children:"Generic Shapes"}),'" tab, select\r\nand add the "',(0,r.jsx)(n.strong,{children:"Sphere"}),'" object to the scene.']}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(63380).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["With the sphere still selected, Copy (",(0,r.jsx)(n.strong,{children:"Ctrl + C"}),") and Paste\r\n(",(0,r.jsx)(n.strong,{children:"Ctrl + V"}),") or Duplicate (",(0,r.jsx)(n.strong,{children:"Ctrl + D"}),") the sphere and use the ",(0,r.jsx)(n.strong,{children:"transform tools"})," to set up\r\nthe remaining 8 planets."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(88510).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:['Select one of the sphere in the scene and open the "',(0,r.jsx)(n.strong,{children:"Configure\r\nTool"}),'", under the Model section set the "',(0,r.jsx)(n.strong,{children:"Material"}),'" texture to\r\nthe "',(0,r.jsx)(n.strong,{children:"earth.jpg"}),'" image in your asset library. Rename the planet\r\naccordingly in the configure tool. ',(0,r.jsx)(n.em,{children:"We will use images of different\r\nplanets to transform the plain sphere object into objects\r\nrepresenting different planets."})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(57332).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Repeat the same procedure for all other spheres."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(78461).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsxs)(n.li,{children:['For each planet, we set their scale relative to the Earth using data\r\nfrom NASA. Open the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'" to modify the "',(0,r.jsx)(n.strong,{children:"Scale"}),'"\r\nof the planets and use the ',(0,r.jsx)(n.strong,{children:"transform tools"})," to reposition them."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(80902).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsx)(n.p,{children:"Below is the reference data from NASA (size ratio & sequence order)"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{}),(0,r.jsx)("th",{children:(0,r.jsx)("strong",{children:"SUN"})}),(0,r.jsx)("th",{children:(0,r.jsx)("strong",{children:"MERCURY"})}),(0,r.jsx)("th",{children:(0,r.jsx)("strong",{children:"VENUS"})}),(0,r.jsx)("th",{children:(0,r.jsx)("strong",{children:"EARTH"})}),(0,r.jsx)("th",{children:(0,r.jsx)("strong",{children:"MOON"})}),(0,r.jsx)("th",{children:(0,r.jsx)("strong",{children:"MARS"})})]})}),(0,r.jsx)("tbody",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Diameter (x, y, z)"}),(0,r.jsx)("td",{children:"109.37"}),(0,r.jsx)("td",{children:"0.383"}),(0,r.jsx)("td",{children:"0.949"}),(0,r.jsx)("td",{children:"1"}),(0,r.jsx)("td",{children:"0.2724"}),(0,r.jsx)("td",{children:"0.532"})]})})]}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{}),(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"JUPITER"})}),(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"SATURN"})}),(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"URANUS"})}),(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"NEPTUNE"})}),(0,r.jsx)("td",{children:(0,r.jsx)("strong",{children:"PLUTO"})})]})}),(0,r.jsx)("tbody",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Diameter (x, y, z)"}),(0,r.jsx)("td",{children:"11.21"}),(0,r.jsx)("td",{children:"9.45"}),(0,r.jsx)("td",{children:"4.01"}),(0,r.jsx)("td",{children:"3.88"}),(0,r.jsx)("td",{children:"0.187"})]})})]}),"\n",(0,r.jsx)(n.h1,{id:"make-the-solar-system-orbit-and-rotate",children:"Make the Solar System Orbit and Rotate"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Select the ",(0,r.jsx)(n.strong,{children:"Sun"}),' object and click on the "',(0,r.jsx)(n.strong,{children:"Behaviour"}),'" tab to\r\nswitch to its behaviour panel. ',(0,r.jsx)(n.em,{children:"As gravity keeps all planets orbit\r\naround the sun, we will use the Sun object to store the planets'\r\norbital and rotational speed data."})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(62447).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:['Select the "',(0,r.jsx)(n.strong,{children:"Show Item Variables"}),'" button to open the item\r\nvariables panel. Add a new variable named "',(0,r.jsx)(n.strong,{children:"MecuryOrbitalPeriod"}),'",\r\nset the variable type to "',(0,r.jsx)(n.strong,{children:"Number"}),'" and its ',(0,r.jsx)(n.strong,{children:"default value"})," to\r\n0.241."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(77072).A+"",width:"1247",height:"551"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Repeat the same procedure to add the orbit and rotation variables\r\ndata for the other planets. ",(0,r.jsx)(n.em,{children:"The Sun's variable panel should look\r\nsimilar to the list below."})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"alt text",src:t(83321).A+"",width:"508",height:"443"}),"\r\n",(0,r.jsx)(n.img,{alt:"alt text",src:t(16738).A+"",width:"496",height:"372"}),"\r\n",(0,r.jsx)(n.img,{alt:"alt text",src:t(7243).A+"",width:"495",height:"382"})]}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsxs)(n.li,{children:['Create 2 more variables "',(0,r.jsx)(n.strong,{children:"OrbitSpeedControl"}),'" and\r\n"',(0,r.jsx)(n.strong,{children:"RotateSpeedControl"}),'" to control the general speed of orbit and\r\nrotation. ',(0,r.jsx)(n.em,{children:"You may adjust the value of these two speed control\r\nvariables to make all plants orbit or rotate faster/slower."})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(87817).A+"",width:"494",height:"186"})}),"\n",(0,r.jsx)(n.h2,{id:"set-the-mercury-to-rotate",children:"Set the Mercury to Rotate"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Select the ",(0,r.jsx)(n.strong,{children:"Mercury"}),' object and click on the "',(0,r.jsx)(n.strong,{children:"Behaviour"}),'" tab\r\nto switch to its behaviour panel.']}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(32992).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:['In the "',(0,r.jsx)(n.strong,{children:"General Event"}),'" category, drag and drop the "',(0,r.jsx)(n.strong,{children:"Start"}),'"\r\nevent trigger block onto the behaviour canvas. Then switch to the\r\n"',(0,r.jsx)(n.strong,{children:"Flow Control"}),'" category, drag and drop the "',(0,r.jsx)(n.strong,{children:"Repeat"}),'" block\r\nonto the behaviour canvas, and add the "',(0,r.jsx)(n.strong,{children:"Rotate"}),'" block from\r\n"',(0,r.jsx)(n.strong,{children:"Motion"}),'" category to the behaviour canvas as well. Connect the\r\n"',(0,r.jsx)(n.strong,{children:"Start"}),'" block\'s out flow node with the "',(0,r.jsx)(n.strong,{children:"Repeat"}),'" block\'s in\r\nflow node, and "',(0,r.jsx)(n.strong,{children:"Repeat"}),'" block\'s out flow node with "',(0,r.jsx)(n.strong,{children:"Rotate"}),"\"\r\nblock's in flow node. ",(0,r.jsx)(n.em,{children:"This sets up the basic logic for the Mercury\r\nobject to repeatedly rotate when the scene starts."})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(11323).A+"",width:"1919",height:"1079"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['We then specify how much the object will rotate. In the "',(0,r.jsx)(n.strong,{children:"Math"}),'"\r\ncategory, drag and drop the "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" block onto the behaviour\r\ncanvas. Then, set the ',(0,r.jsx)(n.strong,{children:"Y"}),' value of the "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" block to\r\n',(0,r.jsx)(n.strong,{children:"360"})," and connect its ",(0,r.jsx)(n.strong,{children:"Output"}),' node with the "',(0,r.jsx)(n.strong,{children:"Rotate"}),"\"\r\nblock's ",(0,r.jsx)(n.strong,{children:"Angle"})," node. ",(0,r.jsx)(n.em,{children:"We set the planets to rotate 360 degrees\r\nrepeatedly, yet the rotation will not happen with the Time set to\r\n0."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Drag and drop a "',(0,r.jsx)(n.strong,{children:"Multiply"}),'" block from the "',(0,r.jsx)(n.strong,{children:"Math"}),'" category,\r\nthen switch to the "',(0,r.jsx)(n.strong,{children:"Variable"}),'" category, drag and drop ',(0,r.jsx)(n.strong,{children:"two"}),'\r\n"',(0,r.jsx)(n.strong,{children:"Get Number"}),'" blocks onto the behaviour canvas. For both "',(0,r.jsx)(n.strong,{children:"Get\r\nNumber"}),'" blocks, select "',(0,r.jsx)(n.strong,{children:"sun"}),'" as the "',(0,r.jsx)(n.strong,{children:"Target"}),'", then set one\r\n"',(0,r.jsx)(n.strong,{children:"Key"}),'" to "',(0,r.jsx)(n.strong,{children:"MercuryRotationPeriod"}),'" and the other to\r\n"',(0,r.jsx)(n.strong,{children:"RotateSpeedControl"}),'". Connect one "',(0,r.jsx)(n.strong,{children:"Get Number"}),"\" block's\r\n",(0,r.jsx)(n.strong,{children:"Output"}),' node with the "',(0,r.jsx)(n.strong,{children:"Multiply"}),"\" block's ",(0,r.jsx)(n.strong,{children:"A"}),' node and\r\nconnect the other "',(0,r.jsx)(n.strong,{children:"Get Number"}),"\" block's ",(0,r.jsx)(n.strong,{children:"Output"}),' node with\r\n"',(0,r.jsx)(n.strong,{children:"Multiply"}),"\" block's ",(0,r.jsx)(n.strong,{children:"B"}),' node. Finally, connect "',(0,r.jsx)(n.strong,{children:"Multiply"}),"\"\r\nblock's ",(0,r.jsx)(n.strong,{children:"Output"}),' node with "',(0,r.jsx)(n.strong,{children:"Rotate"}),"\" block's ",(0,r.jsx)(n.strong,{children:"Time"})," node."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["This is the close-up of the whole behaviour flow of the Mercury.\r\n",(0,r.jsx)(n.em,{children:'This sets the Mercury object to rotate 360 degrees against its\r\ncentre of origin every period, which value is defined as the product\r\nof the "MercuryRotationPeriod" and the "RotateSpeedControl" values.'})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(88840).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:['Press the "',(0,r.jsx)(n.strong,{children:"Play"}),'" button to enter play mode, move or\r\nteleport to near the Mercury planet and check if it\'s rotating as\r\nexpected. Then use the "',(0,r.jsx)(n.strong,{children:"Esc"}),'" button to return to scene editing.']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"set-the-mercury-to-orbit",children:"Set the Mercury to Orbit"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["We will use an empty object ",(0,r.jsx)(n.strong,{children:"Linked to a Planet"}),' to create the\r\nOrbit effect. First, add an "',(0,r.jsx)(n.strong,{children:"Empty Object"}),"\" to the scene and make\r\nsure it's ",(0,r.jsx)(n.strong,{children:"spawned at the origin"})," (same position as the Sun)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the "',(0,r.jsx)(n.strong,{children:"Empty Object"}),'" and rename it as ',(0,r.jsx)(n.strong,{children:"mercuryEmpty"}),' in\r\nthe "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'".']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Hide the ",(0,r.jsx)(n.strong,{children:'"Sun"'})," object in editor."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the "',(0,r.jsx)(n.strong,{children:"Mercury"}),'" object, press the "',(0,r.jsx)(n.strong,{children:"Link to another\r\nitem"}),'" button then point and click the ',(0,r.jsx)(n.strong,{children:"mercuryEmpty"})," object to\r\nmake mercuryEmpty a ",(0,r.jsx)(n.strong,{children:"parent"})," of the ",(0,r.jsx)(n.strong,{children:"Mercury"})," object. ",(0,r.jsx)(n.em,{children:"Now the\r\nMercury object will move together with the mercuryEmpty parent\r\nobject while keeping the same relative position / rotation between\r\nthem."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'To confirm the two objects are linked successfully, you can select\r\nthe "mercuryEmpty" parent object in the scene and observe that the\r\n"Mercury" child object is also selected.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["With the ",(0,r.jsx)(n.strong,{children:"mercuryEmpty"}),' object still selected, click on the\r\n"',(0,r.jsx)(n.strong,{children:"Behaviour"}),'" tab to switch to its behaviour panel.']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(18509).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsxs)(n.ol,{start:"7",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Drag and drop a "',(0,r.jsx)(n.strong,{children:"Start"}),'" event trigger block, a "',(0,r.jsx)(n.strong,{children:"Repeat"}),'"\r\nblock and a "',(0,r.jsx)(n.strong,{children:"Rotate"}),'" block onto the behaviour canvas in the same\r\nway as you did for the Mercury object, then connect the blocks\r\nsequentially.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Following the same logic for rotating the "Mercury" object, drag and\r\ndrop a "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" block and a "',(0,r.jsx)(n.strong,{children:"Multiply"}),'" blocks, then add\r\n',(0,r.jsx)(n.strong,{children:"two"}),' "',(0,r.jsx)(n.strong,{children:"Get Number"}),'" blocks onto the behaviour canvas. Set the\r\n',(0,r.jsx)(n.strong,{children:"Y"}),' value of the "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" block to ',(0,r.jsx)(n.strong,{children:"360"})," and connect its\r\n",(0,r.jsx)(n.strong,{children:"Output"}),' node with the "',(0,r.jsx)(n.strong,{children:"Rotate"}),"\" block's ",(0,r.jsx)(n.strong,{children:"Angle"}),' node. For\r\nboth "',(0,r.jsx)(n.strong,{children:"Get Number"}),'" blocks, select "',(0,r.jsx)(n.strong,{children:"sun"}),'" as the "',(0,r.jsx)(n.strong,{children:"Target"}),'",\r\nthen set one "',(0,r.jsx)(n.strong,{children:"Key"}),'" to "',(0,r.jsx)(n.strong,{children:"MercuryOrbitalPeriod"}),'" and the other\r\nto "',(0,r.jsx)(n.strong,{children:"OrbitSpeedControl"}),'". Connect one "',(0,r.jsx)(n.strong,{children:"Get Number"}),"\" block's\r\n",(0,r.jsx)(n.strong,{children:"Output"}),' node with the "',(0,r.jsx)(n.strong,{children:"Multiply"}),"\" block's ",(0,r.jsx)(n.strong,{children:"A"}),' node and\r\nconnect the other "',(0,r.jsx)(n.strong,{children:"Get Number"}),"\" block's ",(0,r.jsx)(n.strong,{children:"Output"}),' node with\r\n"',(0,r.jsx)(n.strong,{children:"Multiply"}),"\" block's ",(0,r.jsx)(n.strong,{children:"B"}),' node. Finally, connect "',(0,r.jsx)(n.strong,{children:"Multiply"}),"\"\r\nblock's ",(0,r.jsx)(n.strong,{children:"Output"}),' node with "',(0,r.jsx)(n.strong,{children:"Rotate"}),"\" block's ",(0,r.jsx)(n.strong,{children:"Time"})," node."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["This is the close-up of the whole behaviour flow of the\r\nmercuryEmpty. ",(0,r.jsx)(n.em,{children:'This sets the mercuryEmpty object to rotate 360\r\ndegrees against its centre of origin every period, which value is\r\ndefined as the product of the "MercuryOrbitPeriod" and the\r\n"OrbitSpeedControl" values.'})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(4534).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsxs)(n.ol,{start:"10",children:["\n",(0,r.jsxs)(n.li,{children:['Press the "',(0,r.jsx)(n.strong,{children:"Play"}),'" button to enter play mode, the Mercury\r\nplanet should be rotating and orbit around the Sun simultaneously.\r\nThen use the "',(0,r.jsx)(n.strong,{children:"Esc"}),'" button to return to scene editing.']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"set-up-orbit-and-rotation-for-other-planets",children:"Set up Orbit and Rotation for Other Planets"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"We can apply the same rotate and orbit logic to other planets. Here\r\nwe will use the Venus as an example."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To start, first Copy (",(0,r.jsx)(n.strong,{children:"Ctrl + C"}),") and Paste\r\n(",(0,r.jsx)(n.strong,{children:"Ctrl + V"}),") or Duplicate (",(0,r.jsx)(n.strong,{children:"Ctrl + D"}),") the ",(0,r.jsx)(n.strong,{children:"mercuryEmpty"})," object, make sure it's ",(0,r.jsx)(n.strong,{children:"resided\r\nat the origin"}),' at (0, 0, 0). Rename the duplicated object as\r\n"',(0,r.jsx)(n.strong,{children:"venusEmpty"}),'" and set it as ',(0,r.jsx)(n.strong,{children:"parent object to Venus"}),' using the\r\n"',(0,r.jsx)(n.strong,{children:"Link"}),'" tool.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Open the Mecury object's behaviour panel then select and copy\r\n(",(0,r.jsx)(n.strong,{children:"Ctrl + C"}),") the whole behaviour flow in the Main layer, which is used to rotate the planet."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Then open the Venus object's behaviour panel, Paste (",(0,r.jsx)(n.strong,{children:"Ctrl + V"}),') the copied behaviour\r\nflow and update the corresponding "',(0,r.jsx)(n.strong,{children:"Key"}),'" in the "',(0,r.jsx)(n.strong,{children:"Get Number"}),"\"\r\nblock attached to Multiply block's ",(0,r.jsx)(n.strong,{children:"A"}),' node from\r\n"',(0,r.jsx)(n.strong,{children:"MercuryRotationPeriod"}),'" to "',(0,r.jsx)(n.strong,{children:"VenusRotationPeriod"}),'".']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Open the mercuryEmpty object's behaviour panel and copy (",(0,r.jsx)(n.strong,{children:"Ctrl + C"}),") the whole behaviour\r\nflow of mercuryEmpty in the Main layer."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Paste the copied behaviour flow to venusEmpty object's behaviour\r\npanel, and update the corresponding \"",(0,r.jsx)(n.strong,{children:"Key"}),'" in the "',(0,r.jsx)(n.strong,{children:"Get\r\nNumber"}),'" block accordingly.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Repeat the same procedure for all other planets, except for the\r\nMoon."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(64612).A+"",width:"1774",height:"998"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Press the "',(0,r.jsx)(n.strong,{children:"Play"}),"\" button to enter play mode, all planets\r\nshould be rotating and orbiting at their own speed except for the\r\nMoon, which is the Earth's satellite."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"set-moon-to-orbit-around-earth",children:"Set Moon to Orbit Around Earth"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"As the Moon is following the Earth's Orbit around the Sun as well as\r\nthe Earth's own rotation at the same time, we will simulate this\r\nmovement using both the earthEmpty parent object and with the Offset\r\nTool."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the "',(0,r.jsx)(n.strong,{children:"Moon"}),'" object and use the "',(0,r.jsx)(n.strong,{children:"Link"}),'" button to parent\r\nit with the ',(0,r.jsx)(n.strong,{children:"earthEmpty"})," object."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Then copy the ",(0,r.jsx)(n.strong,{children:"X, Y, Z position"})," as displayed in the ",(0,r.jsx)(n.strong,{children:"Earth"}),"'s\r\nConfigure Tool and set the ",(0,r.jsx)(n.strong,{children:"Moon's X, Y, Z position"})," to these\r\nvalues. ",(0,r.jsx)(n.em,{children:"Now the Moon should be completely inside the Earth and\r\nsharing the same position."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['With the "',(0,r.jsx)(n.strong,{children:"Moon"}),'" object still selected, use the "',(0,r.jsx)(n.strong,{children:"Offset Tool"}),'"\r\nor set the Moon\'s X-Axis Offset value to 2 in the "',(0,r.jsx)(n.strong,{children:"Configure\r\nTool"}),'". Now the Sphere representing the Moon should be shown\r\noutside of the Earth object, but its centre still overlaps with the\r\nEarth object.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Now we will add behaviour to make the Moon orbit around the Earth.\r\nSelect the ",(0,r.jsx)(n.strong,{children:"Mercury"})," object's behaviour panel and copy the\r\nbehaviour defined in the Main layer for making the Mercury rotate.\r\nSwitch to the ",(0,r.jsx)(n.strong,{children:"Moon"}),"'s behaviour panel and paste the behaviour\r\nflow to the canvas. In the \"",(0,r.jsx)(n.strong,{children:'Get Number"'})," blocks, change the\r\n",(0,r.jsx)(n.strong,{children:"Key"}),' to "',(0,r.jsx)(n.strong,{children:"MoonOrbitalPeriod"}),'" and "',(0,r.jsx)(n.strong,{children:"OrbitSpeedControl"}),'"\r\nrespectively. ',(0,r.jsx)(n.em,{children:"This time, since we have offset the Moon sphere model\r\nin the previous step, rotating the Moon object will result in an\r\norbiting movement of the Moon sphere model."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter play mode to check out how the Moon orbits around the Earth."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"create-new-planet-scene",children:"Create New Planet Scene"}),"\n",(0,r.jsx)(n.h2,{id:"add-the-welcome-text",children:"Add the Welcome Text"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Open the "',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and from the "',(0,r.jsx)(n.strong,{children:"Specialize Objects"}),'"\r\ntab, select and add the "',(0,r.jsx)(n.strong,{children:"Text Object"}),'" to the scene to create a\r\nWelcome Textbox.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.strong,{children:"transform tools"}),' (move / rotate / scale) to reposition\r\nthe text object. Then open the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'" to set up the\r\ntext content, font size, and colour of the text object.']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(44827).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsx)(n.h2,{id:"set-up-the-mercury-scene",children:"Set up the Mercury Scene"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Open the "',(0,r.jsx)(n.strong,{children:"Scene Menu"}),'" and select the "',(0,r.jsx)(n.strong,{children:"Add New Scene"}),'" button\r\nto create a new scene.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the "',(0,r.jsx)(n.strong,{children:"Empty Scene"}),'" template and add it to the project.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Rename the Empty Scene as "',(0,r.jsx)(n.strong,{children:"Mercury Scene"}),'" and press "',(0,r.jsx)(n.strong,{children:"Change\r\nto"}),'" to open the new Mercury Scene.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['In the Mercury Scene, open the "',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and add a\r\n"',(0,r.jsx)(n.strong,{children:"Ground"}),'" object to the scene.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Modifying the "',(0,r.jsx)(n.strong,{children:"Scale"}),'" of the Ground object using either the\r\n',(0,r.jsx)(n.strong,{children:"transform tools"}),' or directly in the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'". ',(0,r.jsx)(n.em,{children:"We\r\nwant to have a large enough area for the player to move around."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Add a "',(0,r.jsx)(n.strong,{children:"2D Image Object"}),'" to the scene. ',(0,r.jsx)(n.em,{children:"We will be using this 2D\r\nImage Object to simulate the appearance of Mercury in the scene."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Open the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'" and modify the "',(0,r.jsx)(n.strong,{children:"Scale"}),'" of the 2D\r\nImage Object so it\'s in similar size as the Ground object. Then,\r\nclick the selector next to the "',(0,r.jsx)(n.strong,{children:"Image Asset"}),'" option to open the\r\nSelection panel and select the "',(0,r.jsx)(n.strong,{children:"mercury.jpg"}),"\" image in your asset\r\nlibrary to simulate mercury's ground appearance. ",(0,r.jsx)(n.em,{children:"This is the same\r\nimage used for the Sphere of Mercury planet, but shown in 2D format\r\ninstead."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Click at any empty space in the scene to select the ",(0,r.jsx)(n.strong,{children:"Scene"}),' and\r\nopen its "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'". Here we use the same\r\n"',(0,r.jsx)(n.strong,{children:"stars_milky.jpg"}),'" in your asset library to set the skybox 360\r\nimage.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Open the "',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and from the "',(0,r.jsx)(n.strong,{children:"Imported Assets"}),'"\r\ntab, select and add the 3 "',(0,r.jsx)(n.strong,{children:"rock"}),'" objects to the scene. Use the\r\n',(0,r.jsx)(n.strong,{children:"transform tools"})," (move / rotate / scale) to adjust the size and\r\nposition of the rock objects."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select one of the rock object and open its "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'".\r\nMake sure both the "',(0,r.jsx)(n.strong,{children:"Interactable"}),'" and "',(0,r.jsx)(n.strong,{children:"Grabbable"}),'" options\r\nare selected. Then, "',(0,r.jsx)(n.strong,{children:"Enable"}),'" the Physics setting as well as the\r\n"',(0,r.jsx)(n.strong,{children:"Use Gravity"}),'" option . Repeat these procedures for the other\r\nrock objects.']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(44617).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['You have now finished setting up the grab interaction and enabled\r\ngravity for the rock objects. Press the "',(0,r.jsx)(n.strong,{children:"Play"}),'" button and ',(0,r.jsx)(n.strong,{children:"press the right mouse\r\nbutton"})," to grab the rocks to test. ",(0,r.jsx)(n.em,{children:"They should fall to the ground\r\nwith simulated Earth gravity when you release the mouse button."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Press "',(0,r.jsx)(n.strong,{children:"Esc"}),"\" to exit play mode after you've done testing your\r\nscene."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"use-add-force-to-simulate-gravity-of-the-planet",children:"Use Add Force to Simulate Gravity of the Planet"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Since the "Use Gravity" option simulates the Earth gravity, we want\r\nto turn off the earth gravity and simulate the Mercury gravity using\r\nPhysics behaviour blocks. Before setting the behaviour flow, first\r\nopen the rocks\' Configure Tool and ',(0,r.jsx)(n.strong,{children:'deselect "Use Gravity"'})," under\r\nPhysics setting ",(0,r.jsx)(n.strong,{children:'while leaving Physics "Enabled"'}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select a rock object and click on the "',(0,r.jsx)(n.strong,{children:"Behaviour"}),'" tab to switch\r\nto its behaviour panel.']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(13650).A+"",width:"1774",height:"998"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Drag and drop a "',(0,r.jsx)(n.strong,{children:"Start"}),'" event trigger block, then a "',(0,r.jsx)(n.strong,{children:"Repeat"}),'"\r\nblock and "',(0,r.jsx)(n.strong,{children:"Wait For"}),'" block from the "',(0,r.jsx)(n.strong,{children:"Flow Control"}),'" category\r\nto the behaviour canvas. Switch to the "',(0,r.jsx)(n.strong,{children:"Physics"}),'" category, drag\r\nand drop the "',(0,r.jsx)(n.strong,{children:"Add Force"}),'" block onto the behaviour canvas.\r\nConnect the blocks sequentially. Then set the ',(0,r.jsx)(n.strong,{children:"Time"}),' on "',(0,r.jsx)(n.strong,{children:"Wait\r\nFor"}),'" block to ',(0,r.jsx)(n.strong,{children:"0.1"}),". ",(0,r.jsx)(n.em,{children:"We want to add force to the rock object\r\nevery 0.1 second."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['From the "',(0,r.jsx)(n.strong,{children:"Math"}),'" category, drag and drop a "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" block to\r\nthe canvas, then connect its ',(0,r.jsx)(n.strong,{children:"Output"}),' node to the "',(0,r.jsx)(n.strong,{children:"Add Force"}),"\"\r\nblock's ",(0,r.jsx)(n.strong,{children:"Force"}),' node. Set the Y value of "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" to -0.37.\r\n',(0,r.jsx)(n.em,{children:"(The equation of the Force Add in Mercury = -(Gravity of Mercury\r\n3.7 divided by 10 FPS)). We fix the FPS to 10 frames per seconds. So\r\nevery 0.1 seconds, we add one tenth of the Mercury's gravity to the\r\nrock in a downward direction."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Select the whole behaviour flow, Copy (",(0,r.jsx)(n.strong,{children:"Ctrl + C"}),") and Paste (",(0,r.jsx)(n.strong,{children:"Ctrl + V"}),") the behaviour flow\r\nto the other two rock objects."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"add-welcome-text-and-return-button-when-clicked",children:"Add Welcome Text and Return Button when Clicked"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Open the "',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and from the "',(0,r.jsx)(n.strong,{children:"Specialized Objects"}),'"\r\ntab, select and add the "',(0,r.jsx)(n.strong,{children:"Text Object"}),'" to the scene.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.strong,{children:"transform tools"}),' (move / rotate / scale) to reposition\r\nthe text object. Then open the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'" to set up the\r\ntext content, font size, and colour of the text object.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Open the "',(0,r.jsx)(n.strong,{children:"New Item Panel"}),'" and from the "',(0,r.jsx)(n.strong,{children:"Specialized Objects"}),'"\r\ntab, select and add the "',(0,r.jsx)(n.strong,{children:"Text Object"}),'" to the scene.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.strong,{children:"transform tools"}),' (move / rotate / scale) to reposition\r\nthe button object. Then open the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'" to set up the\r\ntext content, font size, and colour of the button object.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the button object and open its behaviour panel. Under\r\n"',(0,r.jsx)(n.strong,{children:"Groups"}),'", add a new behaviour group named "',(0,r.jsx)(n.strong,{children:"return"}),'" and\r\ntoggle the "',(0,r.jsx)(n.strong,{children:"Action"}),'" button to make it an action that can be\r\ncalled by other objects. An "',(0,r.jsx)(n.strong,{children:"Action Start"}),'" event trigger block\r\nwill appear on the canvas.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Switch to behaviour Library, under the "',(0,r.jsx)(n.strong,{children:"Scene"}),'" category drag the\r\n"',(0,r.jsx)(n.strong,{children:"Change Scene"}),'" block and append it behind the "',(0,r.jsx)(n.strong,{children:"Action Start"}),'"\r\nblock. Select the "',(0,r.jsx)(n.strong,{children:"Solar System"}),'" scene under "Change Scene"\r\nblock\'s "',(0,r.jsx)(n.strong,{children:"Scene"}),'" option, then connect the "',(0,r.jsx)(n.strong,{children:"Action Start"}),'"\r\nblock and the "',(0,r.jsx)(n.strong,{children:"Change Scene"}),'" block. ',(0,r.jsx)(n.em,{children:"When this action is called,\r\nthe scene will be changed back to the Solar System."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the "',(0,r.jsx)(n.strong,{children:"Button Object"}),'" and open its "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'"\r\nscroll down to select the "',(0,r.jsx)(n.strong,{children:"Action"}),'" option for the button. On the\r\nselection panel, select the button object from the item list on the\r\nleft side, then choose the "',(0,r.jsx)(n.strong,{children:"return"}),'" action on the right and\r\nselect the action. ',(0,r.jsx)(n.em,{children:'This will set up the "Click here to return solar\r\nsystem" button object to call the "return" action to change back to\r\nthe "Solar System" scene when the button is clicked.'})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"add-outline-effect-to-objects",children:"Add Outline Effect to Objects"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['In the Mercury scene, open the behaviour panel for one of the rocks.\r\nConstruct a behaviour flow using "',(0,r.jsx)(n.strong,{children:"Start"}),'" event trigger block,\r\n"',(0,r.jsx)(n.strong,{children:"Color"}),'" Math block and "',(0,r.jsx)(n.strong,{children:"Outline"}),'" Effect block. Set the\r\n"',(0,r.jsx)(n.strong,{children:"R"}),'" (red) value of the Color block to ',(0,r.jsx)(n.strong,{children:"255"}),' and the "',(0,r.jsx)(n.strong,{children:"A"}),'"\r\n(alpha) value of the Color block to ',(0,r.jsx)(n.strong,{children:"255"}),', and all other values to\r\n0, the color preview under the "',(0,r.jsx)(n.strong,{children:"Output"}),'" node should show a red\r\ncolor. Connect all the blocks in the same manner as shown below.\r\n',(0,r.jsx)(n.em,{children:"This gives the rocks a red outline when scene starts."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Drag the behaviour canvas to an empty space, create another\r\nbehaviour flow using "',(0,r.jsx)(n.strong,{children:"Start Pointing"}),'" event trigger block, a\r\n"',(0,r.jsx)(n.strong,{children:"Color"}),'" Math block and an "',(0,r.jsx)(n.strong,{children:"Outline"}),'" Effect block. Set the\r\n"',(0,r.jsx)(n.strong,{children:"G"}),'" (green) value of the Color block to ',(0,r.jsx)(n.strong,{children:"255"}),' and the "',(0,r.jsx)(n.strong,{children:"A"}),'"\r\n(alpha) value of the Color block to ',(0,r.jsx)(n.strong,{children:"255"}),', and all other values to\r\n0, the color preview under the "',(0,r.jsx)(n.strong,{children:"Output"}),'" node should show a green\r\ncolor. Connect all the blocks in the same manner as shown below.\r\n',(0,r.jsx)(n.em,{children:"This gives the rocks a green outline when pointed at with the\r\nWand."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Copy and paste the above behaviour blocks to another empty space on\r\nthe canvas, then replace the "',(0,r.jsx)(n.strong,{children:"Start Pointing"}),'" block with a\r\n"',(0,r.jsx)(n.strong,{children:"Stop Pointing"}),'" block. Set the "',(0,r.jsx)(n.strong,{children:"Color"}),'" block value to red\r\nfor this behaviour flow. ',(0,r.jsx)(n.em,{children:"This time, the rocks will again show a red\r\noutline when the Wand stops pointing at it."})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Select the whole outline effects behaviour flow, Copy (",(0,r.jsx)(n.strong,{children:"Ctrl + C"}),") and Paste\r\n(",(0,r.jsx)(n.strong,{children:"Ctrl + V"}),") all the behaviour\r\nflows to the other two rock objects."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Deselect any objects"}),' in the scene and open the "',(0,r.jsx)(n.strong,{children:"Configure\r\nTool"}),'" to configure the scene settings. Select "',(0,r.jsx)(n.strong,{children:"Wand"}),'" as the\r\n"',(0,r.jsx)(n.strong,{children:"Default Tool"}),'". This sets the Wand tool as the default\r\ninteraction tool in XR mode. Then change the "',(0,r.jsx)(n.strong,{children:"Wand Length"}),'" into\r\n"',(0,r.jsx)(n.strong,{children:"10"}),'".']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['You have now finished setting up the outline effects for the rock\r\nobjects. Press the "',(0,r.jsx)(n.strong,{children:"Play"}),'" button and test your scene. The rocks\r\nwould show a green outline when pointed and a red outline in other\r\ncircumstances. Press "',(0,r.jsx)(n.strong,{children:"Esc"}),"\" to exit play mode after you've done\r\ntesting your scene."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'We can apply the same technique to add outline to the planets in the\r\n"Solar System" scene. Use the Mercury object as an example, we first\r\nselect it and open its behaviour panel.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Paste (",(0,r.jsx)(n.strong,{children:"Ctrl + V"}),") the whole outline\r\neffects behaviour flow onto the Mercury object's Main layer canvas."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"We also add another behaviour flow to the Mercury object, so the\r\nuser will be directed to the Mercury scene when the Mercury object\r\nis clicked."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['You have now finished setting up the outline effects for the Mercury\r\nplanet. Press the "',(0,r.jsx)(n.strong,{children:"Play"}),'" button and test your scene, then use the\r\nWand to click the "',(0,r.jsx)(n.strong,{children:"Mercury"}),'" planet to enter the Mercury scene.']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(66496).A+"",width:"1774",height:"998"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Press "',(0,r.jsx)(n.strong,{children:"Esc"}),"\" to exit play mode after you've done testing the\r\nchange scene feature."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"set-up-other-planets-scenes",children:"Set up other Planets' Scenes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'You can use the Mercury scene as a template to create and set up\r\nscenes for the other planets. This can be achieved using the\r\n"Duplicate Scene" button on the Scene panel.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['From any scene, open the "',(0,r.jsx)(n.strong,{children:"Scene Menu"}),'" and press the\r\n"',(0,r.jsx)(n.strong,{children:"Duplicate"}),'" button for the Mercury scene to duplicate the scene\r\nand all objects configured in the scene. Rename the scene to Venus\r\nthen double click the Venus scene to enter.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Select the text object in the Venus scene and edit its Text content\r\nusing the "',(0,r.jsx)(n.strong,{children:"Configure Tool"}),'", change the planet name from Mercury\r\nto Venus.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Then replace the "',(0,r.jsx)(n.strong,{children:"Image Asset"}),'" that\'s used as ground appearance\r\nto "',(0,r.jsx)(n.strong,{children:'venus.jpg"'}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Lastly, select the rocks on the ground and open their behaviour\r\npanel."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Change the add force data in the "',(0,r.jsx)(n.strong,{children:"Vector3"}),'" block to -0.89 to\r\nsimulate Venus gravity.\r\n(The equation of the Force Add in Venus = -(Gravity of Venus/FPS))']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Repeat the same procedure for other planets."}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},66956:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/01-1-eebb85160f5fcc2288eb962adf1bf9f8.png"},34377:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/06-9570f4a931d9b4044865e59b9df8f4c5.png"},56256:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/07-6c3273298883b3cb0bb1e0f198762c20.png"},63380:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/08-826b32c824cd36875e5891ec484bce63.png"},88510:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/09-b767e1671cb6e567146c18394864e680.png"},57332:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/10-20f114ac9f8435e2cc6093d09664e8dd.png"},78461:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/11-bc0d0c061bcca29fd5669a9f81267099.png"},80902:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/12-c21481cd68efa0aedb92b6f710dd4f5a.png"},62447:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/13-805dd16676176a4a2cf2713eda129131.png"},77072:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/14-8827ef5fe4358cfb78165b2df9d750fe.png"},83321:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/15-c2e51b98845e4eb28aa350826801a917.png"},16738:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/16-4b0cd472bf0134f9ff82eb5da4767d30.png"},7243:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/17-69139b8117f37246cbb181a3e779f7cf.png"},87817:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/20-010889059ed451e0df123b50c50c8b87.png"},32992:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/21-6103d02b11061225476e00613df3652f.png"},11323:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/22-6eff6d11aec25ee13e142c39f055dfff.png"},48044:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-1-1-4542e175efc81582f7e3fc478c20b4e0.png"},4534:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-1-920e3270b7ebe8151b6d8165f98b77cd.png"},18509:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-2-d144cff3836feb7733b68ff257fd61e6.png"},64612:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-3-e0a1daf450c2f4caef07981751aedf00.png"},44827:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-4-1cdadf376d1ee8680512db7bd287b2e7.png"},13650:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-5-82423acdd4e4e3be1770f847610b7fb3.png"},44617:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-6-a0ecd1ca111dace618c2add17bdcd3fd.png"},66496:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-7-0a07fd6081c48fd33c012d5104384265.png"},88840:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-8cb54c4e6c110d1e867510dd05cf4e18.png"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(96540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);